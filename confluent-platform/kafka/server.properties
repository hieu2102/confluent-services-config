config.providers=file
config.providers.file.class=org.apache.kafka.common.config.provider.FileConfigProvider

broker.id=${file:/etc/kafka/server.properties:broker.id}
num.network.threads=3
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600
log.dirs=/var/lib/kafka
num.partitions=1
num.recovery.threads.per.data.dir=1
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=2
transaction.state.log.min.isr=1
log.retention.hours=48
log.retention.check.interval.ms=300000
zookeeper.connect=kafka-01:2181,kafka-02:2181,kafka-03:2181
zookeeper.connection.timeout.ms=18000
metric.reporters=io.confluent.metrics.reporter.ConfluentMetricsReporter
confluent.metrics.reporter.bootstrap.servers=kafka-01:9091,kafka-02:9091,kafka-03:9091
confluent.metrics.reporter.topic.replicas=1
confluent.metrics.reporter.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${file:/opt/confluent/confluent-platform/secret.properties:cluster.super.user.username}" password="${file:/opt/confluent/confluent-platform/secret.properties:cluster.super.user.credentials}";
confluent.metrics.reporter.security.protocol=SASL_PLAINTEXT
confluent.metrics.reporter.sasl.mechanism=PLAIN
group.initial.rebalance.delay.ms=0
confluent.license.topic.replication.factor=1
confluent.metadata.topic.replication.factor=1
confluent.security.event.logger.exporter.kafka.topic.replicas=1
confluent.balancer.enable=true
confluent.balancer.topic.replication.factor=1
compression.type=lz4
message.max.bytes=10485760
default.replication.factor=1
confluent.license=${file:/opt/confluent/confluent-platform/secret.properties:confluent.license}

## LDAP configuration
# Kafka authenticates to the directory service with the bind user.
ldap.java.naming.provider.url=ldap://kafka-01:389
ldap.java.naming.security.authentication=simple
ldap.java.naming.security.credentials=${file:/opt/confluent/confluent-platform/secret.properties:cluster.super.user.credentials}
ldap.java.naming.security.principal=cn=${file:/opt/confluent/confluent-platform/secret.properties:cluster.super.user.username},ou=People,dc=bnh,dc=vn
# Locate groups
ldap.group.name.attribute=cn
ldap.group.object.class=groupOfNames
ldap.group.member.attribute=member
ldap.group.member.attribute.pattern=CN=(.*),ou=People,dc=bnh,dc=vn
ldap.group.search.base=ou=Group,dc=bnh,dc=vn
ldap.user.search.scope=2
# Locate users. Make sure that these attributes and object classes match what is in your directory service.
ldap.user.name.attribute=cn
ldap.user.object.class=person
ldap.user.search.base=ou=People,dc=bnh,dc=vn
ldap.user.password.attribute=userPassword


listeners=OAUTH://:9092,INTERNAL://:9091,PLAINTEXT://:9093
sasl.enabled.mechanisms=PLAIN,OAUTHBEARER
listener.security.protocol.map=INTERNAL:SASL_PLAINTEXT,OAUTH:SASL_PLAINTEXT,PLAINTEXT:PLAINTEXT

# inter-broker configuration
inter.broker.listener.name=INTERNAL
sasl.mechanism.inter.broker.protocol=PLAIN

listener.name.internal.sasl.enabled.mechanisms=PLAIN
listener.name.internal.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${file:/opt/confluent/confluent-platform/secret.properties:cluster.super.user.username}" password="${file:/opt/confluent/confluent-platform/secret.properties:cluster.super.user.credentials}";
listener.name.internal.plain.sasl.server.callback.handler.class=io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler

listener.name.oauth.sasl.enabled.mechanisms=OAUTHBEARER
listener.name.oauth.oauthbearer.sasl.login.callback.handler.class=io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
listener.name.oauth.oauthbearer.sasl.server.callback.handler.class=io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
listener.name.oauth.oauthbearer.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required publicKeyPath="/opt/confluent/confluent-platform/mds/mds.pub";

authorizer.class.name=io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
confluent.authorizer.access.rule.providers=CONFLUENT,ZK_ACL
confluent.metadata.server.advertised.listeners=http://${file:/etc/kafka/server.properties:hostname}:8090
confluent.metadata.server.authentication.method=BEARER
confluent.metadata.server.listeners=http://${file:/etc/kafka/server.properties:hostname}:8090
confluent.metadata.server.token.key.path=/opt/confluent/confluent-platform/mds/mds.pem
super.users=User:${file:/opt/confluent/confluent-platform/secret.properties:cluster.super.user.username};User:ANONYMOUS
confluent.telemetry.enabled=false
